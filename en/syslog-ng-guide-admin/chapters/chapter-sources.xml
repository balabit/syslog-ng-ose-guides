<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
 [
 <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<chapter xml:id="chapter-sources" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Collecting log messages &mdash; sources and source drivers</title>
    <indexterm>
        <primary>source drivers</primary>
        <secondary>reference</secondary>
    </indexterm>
    <section xml:id="sources">
        <title>How sources work</title>
        <indexterm significance="preferred">
            <primary>sources</primary>
        </indexterm>
        <indexterm significance="preferred">
            <primary>source drivers</primary>
        </indexterm>
        <para>A source is where syslog-ng receives log messages. Sources consist of one or more drivers, each defining where and how messages are received.</para>
        <para>To define a source, add a source statement to the syslog-ng configuration file using the following syntax:<indexterm>
            <primary>sources</primary>
            <secondary>defining</secondary>
        </indexterm><synopsis>source &lt;identifier&gt; { source-driver(params); source-driver(params); ... };</synopsis></para>
        <example>
            <title>A simple source statement</title>
            <para>The following source statement receives messages on the TCP port <userinput>1999</userinput> of the interface having the <userinput>10.1.2.3</userinput> IP address.</para>
            <synopsis>source s_demo_tcp { network(ip(10.1.2.3) port(1999)); };</synopsis>
        </example>
        <example>
            <title>A source statement using two source drivers</title>
            <para>The following source statement receives messages on the <userinput>1999</userinput> TCP port and the <userinput>1999</userinput> UDP port of the interface having the <userinput>10.1.2.3</userinput> IP address.</para>
            <synopsis>source s_demo_two_drivers {
           network(ip(10.1.2.3) port(1999));
           network(ip(10.1.2.3) port(1999) transport("udp")); };</synopsis>
        </example>
        <example>
            <title>Setting default priority and facility</title>
            <indexterm>
                <primary>setting facility</primary>
            </indexterm>
            <indexterm>
                <primary>overriding facility</primary>
            </indexterm>
            <para>If the message received by the source does not have a proper syslog header, you can use the <parameter>default-facility()</parameter> and <parameter>default-priority()</parameter> options to set the facility and priority of the messages. Note that these values are applied only to messages that do not set these parameters in their header.</para>
            <synopsis>source headerless_messages { network(default-facility(syslog) default-priority(emerg)); };</synopsis>
        </example>
        <para>Define a source only once. The same source can be used in several log paths. Duplicating sources causes syslog-ng to open the source (TCP/IP port, file, and so on) more than once, which might cause problems. For example, include the <filename>/dev/log</filename> file source only in one source statement, and use this statement in more than one log path if needed.</para>
        <warning>
            <xi:include href="../../common/chunk/para-initializing-sources-destinations.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </warning>
        <para>To collect log messages on a specific platform, it is important to know how the native <parameter>syslogd</parameter> communicates on that platform. The following table summarizes the operation methods of <parameter>syslogd</parameter> on some of the tested platforms:</para>
<!-- FIXME check if any platform is missing, and update this list
        collect a list of sources that are needed on a platform to cover the functionality of the native syslog solution -->
        <table>
            <title>Communication methods used between the applications and syslogd</title>
            <indexterm>
                <primary>sources</primary>
                <secondary>on different platforms</secondary>
            </indexterm>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Platform</entry>
                        <entry>Method</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Linux</entry>
                        <entry>A <parameter>SOCK_DGRAM</parameter> unix socket named <filename>/dev/log</filename>. Newer distributions that use systemd collect log messages into a journal file.</entry>
                    </row>
                    <row>
                        <entry>BSD flavors</entry>
                        <entry>A <parameter>SOCK_DGRAM</parameter> unix socket named <filename>/var/run/log</filename>.</entry>
                    </row>
                    <row>
                        <entry>Solaris (2.5 or below)</entry>
                        <entry>An SVR4 style <parameter>STREAMS</parameter> device named <filename>/dev/log</filename>.</entry>
                    </row>
                    <row>
                        <entry>Solaris (2.6 or above)</entry>
                        <entry>In addition to the <parameter>STREAMS</parameter> device used in earlier versions, 2.6 uses a new multithreaded IPC method called door. By default the door used by <parameter>syslogd</parameter> is <filename>/etc/.syslog_door</filename>. </entry>
                    </row>
                    <row>
                        <entry>HP-UX 11 or later</entry>
                        <entry>HP-UX uses a named pipe called <filename>/dev/log</filename> that is padded to 2048 bytes, for example <userinput>source s_hp-ux {pipe ("/dev/log" pad-size(2048)}</userinput>.</entry>
                    </row>
                    <row>
                        <entry>AIX 5.2 and 5.3</entry>
                        <entry>A <parameter>SOCK_STREAM</parameter> or <parameter>SOCK_DGRAM</parameter> unix socket called <filename>/dev/log</filename>.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>Each possible communication mechanism has a corresponding source driver in syslog-ng. For example, to open a unix socket with <parameter>SOCK_DGRAM</parameter> style communication use the driver <parameter>unix-dgram</parameter>. The same socket using the <parameter>SOCK_STREAM</parameter> style &mdash; as used under Linux &mdash; is called <parameter>unix-stream</parameter>.</para>
        <example>
            <title>Source statement on a Linux based operating system</title>
            <para>The following source statement collects the following log messages:</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis>internal()</emphasis>: Messages generated by syslog-ng.</para>
                </listitem>
                <listitem>
                    <para><emphasis>network(transport("udp"))</emphasis>: Messages arriving to the <userinput>514/UDP</userinput> port of any interface of the host.</para>
                </listitem>
                <listitem>
                    <para><emphasis>unix-dgram("/dev/log");</emphasis>: Messages arriving to the <filename>/dev/log</filename> socket.</para>
                </listitem>
            </itemizedlist>
            <synopsis>source s_demo {
    internal();
    network(transport("udp"));
    unix-dgram("/dev/log"); };</synopsis>
        </example>
        <para>The following table lists the source drivers available in syslog-ng.</para>
        <xi:include href="../../common/chunk/table-source-drivers.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    </section>
    <section xml:id="configuring-sources-internal">
        <title>Collecting internal messages</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>internal()</parameter> driver</secondary>
        </indexterm>
        <para>All messages generated internally by syslog-ng use this special source. To collect warnings, errors and notices from syslog-ng itself, include this source in one of your source statements.</para>
        <synopsis>internal()</synopsis>
        <para>The syslog-ng application will issue a warning upon startup if none of the defined log paths reference this driver.</para>
        <example xml:id="example-source-internal">
            <title>Using the internal() driver</title>
            <synopsis>source s_local { internal(); };</synopsis>
        </example>
        <formalpara>
            <title>The &abbrev; application sends the following message types from the internal() source:</title>
            <para/>
        </formalpara>
        <itemizedlist>
            <listitem>
                <para><emphasis>fatal</emphasis>: Priority value: critical (2); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>error</emphasis>: Priority value: error (3); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>warning</emphasis>: Priority value: warning (4); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>notice</emphasis>: Priority value: notice (5); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>info</emphasis>: Priority value: info (6); Facility value: syslog (5)</para>
            </listitem>
        </itemizedlist>
        <section xml:id="reference-source-internal">
            <title>internal() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>internal()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>internal()</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-sources-file">
        <title>Collecting messages from text files</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>file()</parameter> driver</secondary>
        </indexterm>
        <para>Collects log messages from plain-text files, for example from the logfiles of an Apache webserver.</para>
        <para>The syslog-ng application notices if a file is renamed or replaced with a new file, so it can correctly follow the file even if logrotation is used. When syslog-ng is restarted, it records the position of the last sent log message in the <filename>/opt/syslog-ng/var/syslog-ng.persist</filename> file, and continues to send messages from this position after the restart.</para>
        <para>The file driver has a single required parameter specifying the file to open. For the list of available optional parameters, see <xref linkend="reference-source-file"/>.</para>
        <formalpara>
            <title>Declaration:</title>
            <para/>
        </formalpara>
        <synopsis>file(filename);</synopsis>
        <example xml:id="example-source-file">
            <title>Using the file() driver</title>
            <synopsis>source s_file { file("/var/log/messages"); };</synopsis>
        </example>
        <example>
            <title>Tailing files</title>
            <para>The following source checks the <filename>access.log</filename> file every second for new messages.</para>
            <synopsis>source s_tail { file("/var/log/apache/access.log"
            follow-freq(1) flags(no-parse)); };</synopsis>
        </example>
        <note>
            <para>If the message does not have a proper syslog header, syslog-ng treats messages received from files as sent by the <parameter>kern</parameter> facility. Use the <parameter>default-facility()</parameter> and <parameter>default-priority()</parameter> options in the source definition to assign a different facility if needed.</para>
        </note>
        <section xml:id="kernel-messages">
            <title>Notes on reading kernel messages</title>
            <para>Note the following points when reading kernel messages on various platforms.</para>
            <itemizedlist>
                <indexterm>
                    <primary>kmsg</primary>
                </indexterm>
                <listitem>
                    <para>The kernel usually sends log messages to a special file (<filename>/dev/kmsg</filename> on BSDs, <filename>/proc/kmsg</filename> on Linux). The <parameter>file()</parameter> driver reads log messages from such files. The syslog-ng application can periodically check the file for new log messages if the <parameter>follow-freq()</parameter> option is set.</para>
                </listitem>
                <listitem>
                    <indexterm>
                        <primary>klogd</primary>
                    </indexterm>
                    <para>On Linux, the <parameter>klogd</parameter> daemon can be used in addition to syslog-ng to read kernel messages and forward them to syslog-ng. <parameter>klogd</parameter> used to preprocess kernel messages to resolve symbols and so on, but as this is deprecated by <parameter>ksymoops</parameter> there is really no point in running both <parameter>klogd</parameter> and syslog-ng in parallel. Also note that running two processes reading <filename>/proc/kmsg</filename> at the same time might result in dead-locks.</para>
                </listitem>
                <listitem>
                    <para>When using syslog-ng to read messages from the <filename>/proc/kmsg</filename> file, syslog-ng automatically disables the <parameter>follow-freq()</parameter> parameter to avoid blocking the file.</para>
                </listitem>
                <listitem>
                    <para>To read the kernel messages on HP-UX platforms, use the following options in the source statement:</para>
                    <synopsis>file("/dev/klog" program-override("kernel") flags(kernel) follow-freq(0));</synopsis>
                </listitem>
            </itemizedlist>
        </section>
<!-- FIXME check if this applies to OSE as well, or only to the PE/agent
        <section xml:id="file-source-and-syslog-destination">
			<title>File sources and the RFC5424 message format</title>
			<indexterm>
				<primary>file@18372.4</primary>
			</indexterm>
			<indexterm>
				<primary>SDATA</primary>
				<secondary>file@18372.4</secondary>
			</indexterm>
			<indexterm>
				<primary>file information</primary>
				<secondary>file@18372.4</secondary>
			</indexterm>
			<indexterm>
				<primary>including filename in messages</primary>
			</indexterm>
            <para>When reading messages from a file and forwarding them in IETF-syslog (RFC5424) format, &abbrev; automatically adds all file-related information to the <userinput>file@18372.4</userinput> SDATA block. When the source is file and the transport protocol is syslog or syslog-protocol flags were used in the destination side, the message will contain the following source file-related information:</para>
			<itemizedlist>
                <listitem>
                    <para><emphasis>size</emphasis>: size of the file</para>
                </listitem>
                <listitem>
                    <para><emphasis>position</emphasis>: file position the message was read from</para>
                </listitem>
                <listitem>
                    <para><emphasis>name</emphasis>: name of the file </para>
                </listitem>
			</itemizedlist>
			<example>
				<title>File-related information in message</title>
				<para><synopsis>309 &lt;38&gt;1 2010-10-19T15:50:45.018203+02:00 server1 localprg 1234 - [timeQuality isSynced="0" tzKnown="0"][file@18372.4 size="184567" pos="1024" name="/var/tmp/msg.txt"] seq: 0000000001, runid: 1287496244, stamp: 2010-10-19T15:50:45 messagetext</synopsis></para>
			</example>
		</section>
-->
        <section xml:id="reference-source-file">
            <title>file() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>file()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>file()</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-default-facility.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-default-priority.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>file()</title>
                <indexterm type="parameter">
                    <primary>file()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The file to read messages from, including the path.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-encoding.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-file-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect condition="ose">
                <xi:include href="../../common/chunk/option-source-multi-line-mode.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <xi:include href="source-network.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="source-nodejs.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <section xml:id="configuring-sources-pipe">
        <title>Collecting messages from named pipes</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>pipe()</parameter> driver</secondary>
        </indexterm>
        <para>The pipe driver opens a named pipe with the specified name and listens for messages. It is used as the native message delivery protocol on HP-UX.</para>
        <para>The pipe driver has a single required parameter, specifying the filename of the pipe to open. For the list of available optional parameters, see <xref linkend="reference-source-pipe"/>.</para>
        <formalpara>
            <title>Declaration:</title>
            <para/>
        </formalpara>
        <synopsis>pipe(filename);</synopsis>
        <note>
            <para>As of syslog-ng Open Source Edition 3.0.2, pipes are created automatically. In earlier versions, you had to create the pipe using the <command>mkfifo(1)</command> command.</para>
        </note>
        <para>Pipe is very similar to the <parameter>file()</parameter> driver, but there are a few differences, for example <parameter>pipe()</parameter> opens its argument in read-write mode, therefore it is not recommended to be used on special files like <filename>/proc/kmsg</filename>.</para>
        <warning>
            <itemizedlist>
                <listitem>
                    <para>It is not recommended to use <parameter>pipe()</parameter> on anything else than real pipes.</para>
                </listitem>
                <listitem>
                    <para>By default, &abbrev; uses the <userinput>flags(no-hostname)</userinput> option for pipes, meaning that &abbrev; assumes that the log messages received from the pipe do not contain the hostname field. If your messages do contain the hostname field, use <userinput>flags(expect-hostname)</userinput>. For details, see <xref linkend="pipe-source-option-flag"/>.</para>
                </listitem>
            </itemizedlist>
        </warning>
        <example xml:id="example-source-pipe">
            <title>Using the pipe() driver</title>
            <synopsis>source s_pipe { pipe("/dev/pipe" pad-size(2048)); };</synopsis>
        </example>
        <section xml:id="reference-source-pipe">
            <title>pipe() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>pipe()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>pipe</parameter> driver has the following options:</para>
            <simplesect xml:id="pipe-source-option-flag">
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect condition="ose">
                <xi:include href="../../common/chunk/option-source-multi-line-mode.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>pipe()</title>
                <indexterm type="parameter">
                    <primary>pipe()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The filename of the pipe to read messages from.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-source-pacct" condition="ose">
        <title>Collecting process accounting logs on Linux</title>
        <indexterm>
            <primary>process accounting</primary>
        </indexterm>
        <indexterm>
            <primary>pacct()</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>pacct()</primary>
        </indexterm>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>pacct()</parameter> driver</secondary>
        </indexterm>
        <para>Starting with version <phrase condition="pe">4 F1</phrase><phrase condition="ose">3.2</phrase>, &abbrev; can collect process accounting logs on Linux systems.Process accounting is the method of recording and summarizing commands executed on Linux, for example, the commands being run, the user who executed the command, CPU time used by the process, exit code, and so on. When process accounting (also called pacct) is enabled on a system, the kernel writes accounting records to the <filename>/var/log/account/pacct</filename> file (might vary between different Linux distributions).</para>
        <para>To use the <parameter>pacct()</parameter> driver, the following conditions must be met:</para>
        <itemizedlist>
            <listitem>
                <para>The &abbrev; application must be compiled with the <parameter>--enable-pacct</parameter> option. Execute the <command>syslog-ng -V</command> command to check if your binary supports process accounting.</para>
            </listitem>
            <listitem>
                <para>The <parameter>pacctformat</parameter> plugin must be loaded. By default, &abbrev; automatically loads the available modules.</para>
            </listitem>
            <listitem>
                <para>The <filename>scl.conf</filename> file must be included in your syslog-ng configuration:<synopsis>@include "scl.conf"</synopsis></para>
            </listitem>
            <listitem>
                <para>Process accounting must be running on the host. You can enable it with the <command>accton</command> command.</para>
            </listitem>
        </itemizedlist>
        <para>The <parameter>pacct()</parameter> driver parses the fields of the accounting logs and transforms them into name-value pairs. The fields are defined in the manual page of the accounting log file (<command>man acct</command>), &abbrev; prepends every field with the <filename>.pacct.</filename> prefix. For example, the <userinput>ac_uid</userinput> field that contains the id of the user who started the process will be available under the <userinput>$.pacct.ac_uid</userinput> name. These can be used as macros in templates, in filters to select specific messages, and so on.</para>
        <para>To use the <parameter>pacct()</parameter> driver, use the following syntax.</para>
        <synopsis>@version: &techversion;
@include "scl.conf"
source s_pacct { pacct(); };
...
log { source(s_pacct); destination(...); };</synopsis>
        <para>The <parameter>pacct()</parameter> driver is actually a reusable configuration snippet configured to handle Linux accounting logs. For details on using or writing such configuration snippets, see <xref linkend="config-blocks"/>. You can find the source of the pacct configuration snippet on <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="https://github.com/balabit/syslog-ng/blob/master/scl/pacct/plugin.conf">GitHub</link>.</para>
        <section xml:id="reference-source-pacct">
            <title>pacct() options</title>
            <para>The <parameter>pacct()</parameter> driver has the following options:</para>
            <simplesect>
                <title>file()</title>
                <indexterm type="parameter">
                    <primary>file()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>/var/log/account/pacct</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The file where the process accounting logs are stored &mdash; &abbrev; reads accounting messages from this file.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-source-program">
        <title>Receiving messages from external applications</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>program()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>reading messages </primary>
            <secondary>from external applications</secondary>
        </indexterm>
        <para>The program driver starts an external application and reads messages from the standard output (stdout) of the application. It is mainly useful to receive log messages from daemons that accept incoming messages and convert them to log messages.</para>
        <para>The program driver has a single required parameter, specifying the name of the application to start.</para>
        <formalpara>
            <title>Declaration:</title>
            <para/>
        </formalpara>
        <synopsis>program(filename);</synopsis>
        <example xml:id="example-source-program">
            <title>Using the program() driver</title>
            <synopsis>source s_program { program("/etc/init.d/mydaemon"); };</synopsis>
        </example>
        <note>
            <para>The program is restarted automatically if it exits.</para>
        </note>
        <section xml:id="reference-source-program">
            <title>program() source options</title>
            <para>The <parameter>program</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>program()</title>
                <indexterm type="parameter">
                    <primary>program()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The name of the application to start and read messages from.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-sources-sunstreams">
        <title>Collecting messages on Sun Solaris</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>sun-streams()</parameter> driver</secondary>
        </indexterm>
        <para>Solaris uses its <parameter>STREAMS</parameter> framework to send messages to the <parameter>syslogd</parameter> process. Solaris 2.5.1 and above uses an IPC called <emphasis>door</emphasis> in addition to <parameter>STREAMS</parameter>, to confirm the delivery of a message. The syslog-ng application supports the IPC mechanism via the <parameter>door()</parameter> option (see below).</para>
        <note>
            <para>The <parameter>sun-streams()</parameter> driver must be enabled when the syslog-ng application is compiled (see <command>./configure --help</command>).</para>
        </note>
        <para>The <parameter>sun-streams()</parameter> driver has a single required argument specifying the <parameter>STREAMS</parameter> device to open, and the <parameter>door()</parameter> option. For the list of available optional parameters, see <xref linkend="reference-source-sunstreams"/>.</para>
        <xi:include href="../../common/wnt/note-solaris-msgid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <formalpara>
            <title>Declaration:</title>
            <para/>
        </formalpara>
        <synopsis>sun-streams(&lt;name_of_the_streams_device&gt; door(&lt;filename_of_the_door&gt;));</synopsis>
        <example xml:id="example-source-sunstreams">
            <title>Using the sun-streams() driver</title>
            <synopsis>source s_stream { sun-streams("/dev/log" door("/etc/.syslog_door")); };</synopsis>
        </example>
        <section xml:id="reference-source-sunstreams">
            <title>sun-streams() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>sun-streams()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>sun-streams()</parameter> driver has the following options.</para>
            <simplesect>
                <title>door()</title>
                <indexterm type="parameter">
                    <primary>door()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>none</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Specifies the filename of a door to open, needed on Solaris above 2.5.1.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-sources-syslog">
        <title>Collecting messages using the IETF syslog protocol (syslog() driver)</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>syslog()</parameter> driver</secondary>
        </indexterm>
        <para>The <parameter>syslog()</parameter> driver can receive messages from the network using the standard IETF-syslog protocol (as described in RFC5424-26). UDP, TCP, and TLS-encrypted TCP can all be used to transport the messages.</para>
        <note>
            <para>The <parameter>syslog()</parameter> driver can also receive BSD-syslog-formatted messages (described in RFC 3164, see <xref linkend="concepts-message-bsdsyslog"/>) if they are sent using the IETF-syslog protocol.</para>
            <para>In &abbrev; versions 3.1 and earlier, the <parameter>syslog()</parameter> driver could handle only messages in the IETF-syslog (RFC 5424-26) format.</para>
        </note>
        <indexterm>
            <primary>TLS</primary>
        </indexterm>
        <para>For the list of available optional parameters, see <xref linkend="reference-source-syslog-chapter"/>.</para>
<!-- FIXME which parameters are required? -->
        <formalpara>
            <title>Declaration:</title>
            <para/>
        </formalpara>
        <synopsis>syslog(ip() port() transport() options());</synopsis>
        <example xml:id="example-source-syslog">
            <title>Using the syslog() driver</title>
            <para>TCP source listening on the localhost on port 1999.</para>
            <synopsis>source s_syslog { syslog(ip(127.0.0.1) port(1999) transport("tcp")); };</synopsis>
            <para>UDP source with defaults.</para>
            <synopsis>source s_udp { syslog( transport("udp")); };</synopsis>
            <para>Encrypted source where the client is also authenticated. For details on the encryption settings, see <xref linkend="tlsoptions"/>.</para>
            <synopsis>source s_syslog_tls{ syslog(
    ip(10.100.20.40)
    transport("tls")
    tls(
    peer-verify(required-trusted)
    ca-dir('/opt/syslog-ng/etc/syslog-ng/keys/ca.d/')
    key-file('/opt/syslog-ng/etc/syslog-ng/keys/server_privatekey.pem')
    cert-file('/opt/syslog-ng/etc/syslog-ng/keys/server_certificate.pem')
    )
    );};</synopsis>
        </example>
        <xi:include href="../../common/wnt/warning-udp-recvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <section xml:id="reference-source-syslog-chapter">
            <title>syslog() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>syslog()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>TLS</primary>
            </indexterm>
            <para>The <parameter>syslog()</parameter> driver has the following options.</para>
            <xi:include href="../../common/chunk/source-syslog-options.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </section>
    </section>
    <section xml:id="configuring-source-system">
        <title>Collecting the system-specific log messages of a platform</title>
        <indexterm type="parameter">
            <primary>system()</primary>
        </indexterm>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>system()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>scl</primary>
            <secondary><parameter>system()</parameter></secondary>
        </indexterm>
        <para>Starting with version <phrase condition="pe">4 F1</phrase><phrase condition="ose">3.2</phrase>, &abbrev; can automatically collect the system-specific log messages of the host on a number of platforms using the <parameter>system()</parameter> driver. If the <parameter>system()</parameter> driver is included in the &abbrev; configuration file, &abbrev; automatically adds the following sources to the &abbrev; configuration.</para>
        <note>
            <para>&abbrev; versions <phrase condition="pe">4.1-5.0</phrase><phrase condition="ose">3.2-3.3</phrase> used an external script to generate the <parameter>system()</parameter> source, but this was problematic in certain situations, for example, when the host used a strict AppArmor profile. Therefore, the <parameter>system()</parameter> source is now generated internally in &abbrev;.</para>
        </note>
        <para>The <parameter>system()</parameter> driver is also used in the default configuration file of &abbrev;. For details on the default configuration file, see <xref linkend="example-defaultconfig"/>. Starting with &abbrev; version <phrase condition="ose">3.6</phrase>, you can use the <command>system-expand</command> command-line utility (which is a shell script, located in the <filename>modules/system-source/</filename> directory) to display the configuration that the <parameter>system()</parameter> source will use.</para>
        <warning>
            <para>If &abbrev; does not recognize the platform it is installed on, it does not add any sources.</para>
        </warning>
        <para>Starting with version <phrase condition="ose">3.6</phrase>, &abbrev; parses messages complying with the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://docs.splunk.com/Documentation/CIM/latest/User/Overview">Splunk Common Information Model (CIM)</link> and marked with <userinput>@cim</userinput> as JSON messages (for example, the ulogd from the netfilter project can emit such messages). That way, you can forward such messages without losing any information to CIM-aware applications (for example, Splunk).</para>
        <indexterm>
            <primary>Common Information Model (CIM)</primary>
        </indexterm>
        <indexterm>
            <primary>JSON</primary>
            <secondary>Common Information Model (CIM)</secondary>
        </indexterm>
        <indexterm>
            <primary>CIM</primary>
        </indexterm>
        <indexterm>
            <primary>@cim</primary>
        </indexterm>
        <table>
            <title>Sources automatically added by &product;</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Platform</entry>
                        <entry>Message source</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>AIX and Tru64</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>unix-dgram("/dev/log");</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>FreeBSD</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>unix-dgram("/var/run/log");</synopsis>
                            <synopsis>unix-dgram("/var/run/logpriv" perm(0600));</synopsis>
                            <synopsis>file("/dev/klog" follow-freq(0) program-override("kernel") flags(no-parse));</synopsis>
                            <para>For FreeBSD versions earlier than 9.1, <parameter>follow-freq(1)</parameter> is used.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>GNU/kFreeBSD</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>unix-dgram("/var/run/log");</synopsis>
                            <synopsis>file("/dev/klog" follow-freq(0) program-override("kernel"));</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>HP-UX</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>pipe("/dev/log" pad-size(2048));</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>Linux</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>unix-dgram("/dev/log");</synopsis>
                            <synopsis>file("/proc/kmsg" program-override("kernel") flags(kernel));</synopsis>
                            <para>Note that on Linux, the <parameter>so-rcvbuf()</parameter> option of the <parameter>system()</parameter> source is automatically set to 8192.</para>
                            <indexterm>
                                <primary>systemd</primary>
                            </indexterm>
                            <para>If the host is running under systemd, &abbrev; reads directly from the systemd journal file using the <parameter>systemd-journal()</parameter> source.</para>
                            <indexterm>
                                <primary>multiline</primary>
                                <secondary>indented-multiline</secondary>
                            </indexterm>
                            <indexterm>
                                <primary>kmsg</primary>
                            </indexterm>
                            <para>If the kernel of the host is version 3.5 or newer, and <filename>/dev/kmsg</filename> is seekable, &abbrev; will use that instead of <filename>/proc/kmsg</filename>, using the <parameter>multi-line-mode(indented)</parameter> and the <parameter>format(linux-kmsg)</parameter> options.</para>
                            <para>If &abbrev; is running in a jail or a Linux Container (LXC), it will not read from the <filename>/dev/kmsg</filename> or <filename>/proc/kmsg</filename> files.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>Solaris 8</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>sun-streams("/dev/log");</synopsis>
                            <xi:include href="../../common/wnt/note-solaris-msgid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                        </entry>
                    </row>
                    <row>
                        <entry>Solaris 9</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>sun-streams("/dev/log" door("/etc/.syslog_door"));</synopsis>
                            <xi:include href="../../common/wnt/note-solaris-msgid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                        </entry>
                    </row>
                    <row>
                        <entry>Solaris 10</entry>
                        <entry>
<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>sun-streams("/dev/log" door("/var/run/syslog_door"));</synopsis>
                            <xi:include href="../../common/wnt/note-solaris-msgid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
    <xi:include href="source-journal.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="source-systemd-syslog.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="source-tcpudp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <section xml:id="configuring-sources-unixstream">
        <title>Collecting messages from UNIX domain sockets</title>
        <para>The <parameter>unix-stream()</parameter> and <parameter>unix-dgram()</parameter> drivers open an <parameter>AF_UNIX</parameter> socket and start listening on it for messages. The <parameter>unix-stream()</parameter> driver is primarily used on Linux and uses <parameter>SOCK_STREAM</parameter> semantics (connection oriented, no messages are lost); while <parameter>unix-dgram()</parameter> is used on BSDs and uses <parameter>SOCK_DGRAM</parameter> semantics: this may result in lost local messages if the system is overloaded.</para>
        <para>To avoid denial of service attacks when using connection-oriented protocols, the number of simultaneously accepted connections should be limited. This can be achieved using the <parameter>max-connections()</parameter> parameter. The default value of this parameter is quite strict, you might have to increase it on a busy system.</para>
        <para>Both unix-stream and unix-dgram have a single required argument that specifies the filename of the socket to create. For the list of available optional parameters, see <xref linkend="reference-source-unixstream"/></para>
        <formalpara>
            <title>Declaration:</title>
            <para/>
        </formalpara>
        <synopsis>unix-stream(filename [options]);
unix-dgram(filename [options]);</synopsis>
        <note>
            <para><parameter>syslogd</parameter> on Linux originally used <parameter>SOCK_STREAM</parameter> sockets, but some distributions switched to <parameter>SOCK_DGRAM</parameter> around 1999 to fix a possible DoS problem. On Linux you can choose to use whichever driver you like as syslog clients automatically detect the socket type being used.</para>
        </note>
        <example xml:id="example-source-unixstream">
            <title>Using the unix-stream() and unix-dgram() drivers</title>
            <synopsis>source s_stream { unix-stream("/dev/log" max-connections(10)); };</synopsis>
            <synopsis>source s_dgram { unix-dgram("/var/run/log"); };</synopsis>
        </example>
        <section xml:id="unixstream-unix-credentials" condition="ose">
            <title>UNIX credentials and other metadata</title>
            <indexterm>
                <primary>UNIX credentials</primary>
            </indexterm>
            <para>Starting with &abbrev; <phrase condition="ose">3.6</phrase><phrase condition="pe">5.2</phrase>, the <parameter>unix-stream()</parameter> and <parameter>unix-dgram()</parameter> sources automatically extract the available UNIX credentials and other metainformation from the received log messages. The &abbrev; application can extract the following information on Linux and FreeBSD platforms (examples show the value of the macro for the <userinput>su - myuser</userinput> command). Similar information is available for the <link linkend="configuring-sources-journal">systemd-journal</link> source.</para>
            <table>
                <title>UNIX credentials available via UNIX domain sockets</title>
                <tgroup cols="2">
                    <thead>
                        <row>
                            <entry align="center">Macro</entry>
                            <entry align="center">Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><parameter>${.unix.cmdline}</parameter>
                            </entry>
                            <entry>The name (without the path) and command-line options of the executable belonging to the PID that sent the message. For example, <userinput>su - myuser</userinput>
                            </entry>
                        </row>
                        <row>
                            <entry><parameter>${.unix.exe}</parameter>
                            </entry>
                            <entry>The path of the executable belonging to the PID that sent the message. For example, <userinput>/usr/bin/su</userinput>
                            </entry>
                        </row>
                        <row>
                            <entry><parameter>${.unix.gid}</parameter>
                            </entry>
                            <entry>The group ID (GID) corresponding to the UID of the application that sent the log message. Note that this is the ID number of the group, not its human-readable name. For example, <userinput>0</userinput>
                            </entry>
                        </row>
                        <row>
                            <entry><parameter>${.unix.pid}</parameter>
                            </entry>
                            <entry>
                                <para>The process ID (PID) of the application that sent the log message. For example, <userinput>774</userinput>.</para>
                                <para>Note that on every UNIX platforms, if the <parameter>system()</parameter> source uses sockets, it will overwrite the PID macro with the value of <parameter>${.unix.pid}</parameter>, if it is available.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><parameter>${.unix.uid}</parameter>
                            </entry>
                            <entry>The user ID (UID) of the application that sent the log message. Note that this is the ID number of the user, not its human-readable name. For example, <userinput>0</userinput>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
<!-- FIXME a correct comparison should be added, based on info from Geller Sanyi:
        unix-dgram is superiot to unix-stream:
        (it does not need 1 fd per client, does not lose messages, blocks the sender just like in stream, keeps the order of messages, and 1 read() is enough to read a complete message)

        <para>The difference between the unix-stream and unix-dgram drivers is similar to the
            difference between the TCP and UDP network protocols. Use the following guidelines
            to select which driver to use in a particular situation:</para>
        <para>Choose unix-stream if you would choose TCP (stream) instead of UDP (datagram). The
            unix-stream driver offers the following features:</para>
        <itemizedlist>
            <listitem>
                <para>Increased reliability</para>
            </listitem>
            <listitem>
                <para>Ordered delivery of messages</para>
            </listitem>
            <listitem>
                <para>Client-side notification of failures</para>
            </listitem>
        </itemizedlist>
        <para>Choose unix-dgram if you would choose TCP (stream) over UDP (datagram). The
            unix-dgram driver offers the following features:</para>
        <itemizedlist>
            <listitem>
                <para>Decreased possibility of Dos by opening too many connections (a local
                    vulnerability)</para>
            </listitem>
            <listitem>
                <para>Less overhead</para>
            </listitem>
        </itemizedlist>
        <para>However, the client does not notice if a message is lost when using the unix-dgram
            driver.</para>-->
        <section xml:id="reference-source-unixstream">
            <title>unix-stream() and unix-dgram() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>unix-stream()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>unix-dgram()</parameter> driver</secondary>
            </indexterm>
            <para>These two drivers behave similarly: they open an <parameter>AF_UNIX</parameter> socket and start listening on it for messages. The following options can be specified for these drivers:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-encoding.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>group()</title>
                <indexterm type="parameter">
                    <primary>group()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Set the gid of the socket.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-host-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>keep-alive()</title>
                <indexterm type="parameter">
                    <primary>keep-alive()</primary>
                </indexterm>
                <indexterm>
                    <primary>keep_alive()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>yes or no</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>yes</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Selects whether to keep connections open when syslog-ng is restarted; cannot be used with <parameter>unix-dgram()</parameter>.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>max-connections()</title>
                <indexterm type="parameter">
                    <primary>max-connections()</primary>
                </indexterm>
                <indexterm>
                    <primary>max_connections()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>number (simultaneous connections)</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>256</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Limits the number of simultaneously open connections. Cannot be used with <parameter>unix-dgram()</parameter>.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>owner()</title>
                <indexterm type="parameter">
                    <primary>owner()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Set the uid of the socket.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>perm()</title>
                <indexterm type="parameter">
                    <primary>perm()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>number (octal notation)</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                                </entry>
                                <entry>0666</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Set the permission mask. For octal numbers prefix the number with '0', for example: use 0755 for rwxr-xr-x.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-so-keepalive.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-so-rcvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
</chapter>
