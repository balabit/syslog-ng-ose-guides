<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.OSE">
    <head>
        <link href="../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="" />
    </head>
    <body name="compiling-syslog-ng">
        <h1 name="compiling-syslog-ng">Compiling syslog-ng from source</h1>
        <MadCap:keyword term="compiling syslog-ng OSE">
        </MadCap:keyword>
        <MadCap:keyword term="installing syslog-ng OSE from source">
        </MadCap:keyword>
        <div>
            <h6>Purpose:</h6>
            <p>To compile syslog-ng Open Source Edition (OSE) from the source code, complete the following steps. Alternatively, you can use precompiled binary packages on several platforms. For a list of third-party packages available for various Linux, UNIX, and other platforms, see <a href="https://www.syslog-ng.com/products/open-source-log-management/3rd-party-binaries.aspx">syslog-ng Open Source Edition installation packages</a>.</p>
        </div>
        <div>
            <h6>Steps:</h6>
            <ol>
                <li>
                    <p>Download the latest version of syslog-ng OSE from <a href="https://github.com/syslog-ng/syslog-ng/">GitHub</a>. The source code is available as a tar.gz archive file.</p>
                </li>
                <li>
                    <p>Install the following packages that are required to compile syslog-ng. These packages are available for most UNIX/Linux systems. Alternatively, you can also download the sources and compile them.</p>
                    <ul>
                        <li>
                            <p>A version of the <i>gcc</i> C compiler that properly supports Thread Local Storage (TLS), for example, version 4.5.</p>
                        </li>
                        <li>
                            <p>The <i>GNU flex</i> lexical analyser generator, <a href="https://github.com/westes/flex">available here</a>.</p>
                        </li>
                        <li>
                            <p>The <i>bison</i> parser generator, <a href="http://ftp.gnu.org/gnu/bison/">available here</a>.</p>
                        </li>
                        <li>
                            <p>The development files of the <i>glib</i> library, <a href="http://freshmeat.net/projects/glib/">available here</a>.</p>
                        </li>
                        <li>
                            <p>The development files of the <i>Autoconf Archive</i> package, <a href="http://www.gnu.org/software/autoconf-archive/">available here</a>.</p>
                        </li>
                        <li>
                            <p>The <MadCap:variable name="General.abbrev"></MadCap:variable> application now uses PCRE-type regular expressions by default. It requires the <span class="Code">libpcre</span> library package, <a href="https://sourceforge.net/projects/pcre/files/pcre/">available here</a>.</p>
                        </li>
                        <li>
                            <MadCap:snippetBlock src="../shared/chunk/para-java-requirements.flsnp">
                            </MadCap:snippetBlock>
                        </li>
                    </ul>
                </li>
                <li>
                    <p>If you want to post log messages as HTTP requests using the <span class="Code">http()</span> destination, install the development files of the <i>libcurl</i> library. This library is not needed if you use the <span class="Code">--disable-http</span> compile option. Alternatively, you can use a Java-based implementation of the HTTP destination.</p>
                    <MadCap:keyword term="destinations:['http()']">
                    </MadCap:keyword>
                    <MadCap:keyword term="http():['compiling']">
                    </MadCap:keyword>
                </li>
                <li>
                    <p>If you want to use the spoof-source function of syslog-ng, install the development files of the <i>libnet</i> library, <a href="http://libnet.sourceforge.net">available here</a>.</p>
                    <MadCap:keyword term="spoof_source:['compiling']">
                    </MadCap:keyword>
                </li>
                <li>
                    <p>If you want to send emails using the <span class="Code">smtp()</span> destination, install the development files of the <i>libesmtp</i> library. This library is not needed if you use the <span class="Code">--disable-smtp</span> compile option.</p>
                    <MadCap:keyword term="destinations:['smtp()']">
                    </MadCap:keyword>
                    <MadCap:keyword term="smtp():['compiling']">
                    </MadCap:keyword>
                </li>
                <li>
                    <p>If you want to send SNMP traps using the <span class="Code">snmp()</span> destination, install the development files of the Net-SNMP library <i>libsnmp-dev</i>. This library is not needed if you use the <span class="Code">--disable-snmp</span> compile option.</p>
                    <MadCap:keyword term="destinations:['snmp()']">
                    </MadCap:keyword>
                    <MadCap:keyword term="snmp():['compiling']">
                    </MadCap:keyword>
                </li>
                <li>
                    <p>If you want to use the <i>/etc/hosts.deny</i> and <i>/etc/hosts.allow</i> for TCP access, install the development files of the <i>libwrap</i> (also called TCP-wrappers) library, <a href="http://ftp.porcupine.org/pub/security/index.html"> available here</a>.</p>
                </li>
                <li>
                    <p>Enter the new directory and issue the following commands. (If the <span class="Code">./configure</span> file does not exist, for example, because you cloned the repository from GitHub instead of using a release tarball, execute the <b class="Code">./autogen.sh</b> command.)</p><pre>$ ./configure
$ make
$ make install</pre>
                </li>
                <li>
                    <p>Uncompress the syslog-ng archive using the</p><pre>tar xvfz syslog-ng-x.xx.tar.gz</pre>
                    <p>or the</p><pre>unzip -c syslog-ng-x.xx.tar.gz | tar xvf -</pre>
                    <p>command. A new directory containing the source code of syslog-ng will be created.</p>
                </li>
                <li>
                    <p>Enter the new directory and issue the following commands:</p><pre>$ ./configure
$ make
$ make install</pre>
                    <p>These commands will build syslog-ng using its default options.</p>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> When using the <span class="Code">make</span> command, consider the following:</p>
                        <ul>
                            <li>
                                <p>On Solaris, use <b class="Code">gmake</b> (GNU make) instead of <b class="Code">make</b>.</p>
                            </li>
                            <li>
                                <p>To build <MadCap:variable name="General.abbrev"></MadCap:variable> with less verbose output, use the <b class="Code">make V=0</b> command. This results in shorter, less verbose output, making warnings and other anomalies easier to notice. Note that silent-rules support is only available in recent automake versions.</p>
                                <MadCap:keyword term="silent rules{see}['silent building']">
                                </MadCap:keyword>
                                <MadCap:keyword term="silent building">
                                </MadCap:keyword>
                            </li>
                        </ul>
                    </div>
                </li>
                <li>
                    <p>If needed, use the following options to change how syslog-ng is compiled using the following command syntax:</p><pre>$ ./configure --compile-time-option-name</pre>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 

						You can also use <i>--disable options</i>, to explicitly disable a feature and override autodetection. For example, to disable the TCP-wrapper support, use the <i>--disable-tcp-wrapper</i> option. For the list of available compiling options, see <MadCap:xref href="syslog-ng-compile-options.htm"><span style="color: #04aada;" class="mcFormatColor">Compiling options of [%=General.OSE%]</span></MadCap:xref>.</p>
                    </div>
                    <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
                        <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
                        </col>
                        <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
                        </col>
                        <tbody>
                            <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
                                <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
                                    <p>
                                        <img src="../../Resources/Images/Common/caution.png" />
                                    </p>
                                </td>
                                <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1"><span class="Yellow">Caution: </span>
                                    <p>The default linking mode of syslog-ng is <span class="Code">dynamic</span>. This means that syslog-ng might not be able to start up if the <span class="Code">/usr</span> directory is on NFS. On platforms where syslog-ng is used as a system logger, the <span class="Code">--enable-mixed-linking</span> is preferred.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </li>
            </ol>
        </div>
    </body>
</html>