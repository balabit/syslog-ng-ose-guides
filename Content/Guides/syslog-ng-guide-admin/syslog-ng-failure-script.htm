<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="syslog-ng-failure-script">
        <h1 name="syslog-ng-failure-script">Running a failure script</h1>
        <MadCap:keyword term="troubleshooting:['syslog-ng']">
        </MadCap:keyword>
        <MadCap:keyword term="troubleshooting:['failure script']">
        </MadCap:keyword>
        <MadCap:keyword term="failure script">
        </MadCap:keyword>
		<div>
        <h6>Purpose:</h6>
        <p>You can create a failure script that is executed when <MadCap:variable name="General.abbrev"></MadCap:variable> terminates abnormally, that is, when it exits with a non-zero exit code. For example, you can use this script to send an automatic email notification.</p>
		</div>
        <div>
		<h6>Prerequisites:</h6>
        <p>The failure script must be the following file: <span class="Code">/opt/syslog-ng/sbin/syslog-ng-failure</span>, and must be executable.</p>
        <p>To create a sample failure script, complete the following steps.</p>
		</div>
        <div>
		<h6>Steps:</h6>
        <ol>
            <li>
                <p>Create a file named <span class="Code">/opt/syslog-ng/sbin/syslog-ng-failure</span> with the following content:</p><pre>#!/usr/bin/env bash
cat &gt;&gt;/tmp/test.txt &lt;&lt;EOF
$(date)
Name............$1
Chroot dir......$2
Pid file dir....$3
Pid file........$4
Cwd.............$5
Caps............$6
Reason..........$7
Argbuf..........$8
Restarting......$9

EOF</pre>
            </li>
            <li>
                <p>Make the file executable: <b class="Code">chmod +x /opt/syslog-ng/sbin/syslog-ng-failure</b></p>
            </li>
            <li>
                <p>Run the following command in the <span class="Code">/opt/syslog-ng/sbin</span> directory: <b class="Code">./syslog-ng --process-mode=safe-background; sleep 0.5; ps aux | grep './syslog-ng' | grep -v grep | awk '{print $2}' | xargs kill -KILL; sleep 0.5; cat /tmp/test.txt</b></p>
                <p>The command starts <MadCap:variable name="General.abbrev"></MadCap:variable> in safe-background mode (which is needed to use the failure script) and then kills it. You should see that the relevant information is written into the <span class="Code">/tmp/test.txt</span> file, for example:</p><pre>Thu May 18 12:08:58 UTC 2017
Name............syslog-ng
Chroot dir......NULL
Pid file dir....NULL
Pid file........NULL
Cwd.............NULL
Caps............NULL
Reason..........signalled
Argbuf..........9
Restarting......not-restarting</pre>
            </li>
            <li>
                <p>You should also see messages similar to the following in system syslog. The exact message depends on the signal (or the reason why <MadCap:variable name="General.abbrev"></MadCap:variable> stopped):</p><pre>May 18 13:56:09 myhost supervise/syslog-ng[10820]: Daemon exited gracefully, not restarting; exitcode='0'
May 18 13:57:01 myhost supervise/syslog-ng[10996]: Daemon exited due to a deadlock/signal/failure, restarting; exitcode='131'
May 18 13:57:37 myhost supervise/syslog-ng[11480]: Daemon was killed, not restarting; exitcode='9'</pre>
                <p>The failure script should run on every non-zero exit event.</p>
            </li>
        </ol>
		</div>
    </body>
</html>