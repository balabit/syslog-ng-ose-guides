<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.OSE">
    <head>
        <link href="../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="" />
    </head>
    <body name="Netskope-parser">
        <h1 name="Netskope-parser">Netskope parser</h1>
        <MadCap:keyword term="segmenting messages">
        </MadCap:keyword>
        <MadCap:keyword term="Netskope parser">
        </MadCap:keyword>
        <MadCap:keyword term="Netskope">
        </MadCap:keyword>
        <MadCap:keyword term="parsers:['Netskope']">
        </MadCap:keyword>
        <p>The Netskope parser can parse Netskope log messages. These messages do not completely comply with the syslog RFCs, making them difficult to parse. The <span class="Code">netskope-parser()</span> of <MadCap:variable name="General.abbrev"></MadCap:variable> solves this problem, and can separate these log messages to name-value pairs. For details on using value-pairs in <MadCap:variable name="General.abbrev"></MadCap:variable> see <MadCap:xref href="concepts-value-pairs.htm"><span style="color: #04aada;" class="mcFormatColor">Structuring macros, metadata, and other value-pairs</span></MadCap:xref>. The parser can parse messages in the following format:</p><pre>&lt;PRI&gt;{JSON-formatted-log-message}</pre>
        <p>For example:</p><pre>&lt;134&gt;{"count": 1, "supporting_data": {"data_values": ["x.x.x.x", "user@domain.com"], "data_type": "user"}, "organization_unit": "domain/domain/Domain Users/Enterprise Users", "severity_level": 2, "category": null, "timestamp": 1547421943, "_insertion_epoch_timestamp": 1547421943, "ccl": "unknown", "user": "user@domain.com", "audit_log_event": "Login Successful", "ur_normalized": "user@domain.com", "_id": "936289", "type": "admin_audit_logs", "appcategory": null}</pre>
        <p>If you find a message that the <span class="Code">netskope-parser()</span> cannot properly parse, <a href="https://www.syslog-ng.com/support/">contact Support</a>, so we can improve the parser.</p>
        <p>The <MadCap:variable name="General.abbrev"></MadCap:variable> application sets the <span class="Code">${PROGRAM}</span> field to <span class="Code">Netskope</span>.</p>
        <p>By default, the Netskope-specific fields are extracted into name-value pairs prefixed with <span class="Code">.netskope</span>. For example, the <span class="Code">organization_unit</span> in the previous message becomes <span class="Code">${.netskope.organization_unit}</span>. You can change the prefix using the <b class="Code">prefix</b> option of the parser.</p>
        <div>
            <h6>Declaration:</h6><pre>@version: <MadCap:variable name="Version.techversion"></MadCap:variable>
@include "scl.conf"
log {
    source { network(flags(no-parse)); };
    parser { netskope-parser(); };
    destination { ... };
};</pre>
        </div>
        <p>Note that you have to disable message parsing in the source using the <b class="Code">flags(no-parse)</b> option for the parser to work.</p>
        <p MadCap:conditions="General.OSE">The <span class="Code">netskope-parser()</span> is actually a reusable configuration snippet configured to parse Netskope messages. For details on using or writing such configuration snippets, see <MadCap:xref href="config-blocks.htm"><span style="color: #04aada;" class="mcFormatColor">Reusing configuration blocks</span></MadCap:xref>. You can find the source of this configuration snippet on <a href="https://github.com/syslog-ng/syslog-ng/blob/master/scl/netskope/plugin.conf">GitHub</a>.</p>
        <div>
            <MadCap:snippetBlock src="../shared/chunk/option-parser-prefix.flsnp">
            </MadCap:snippetBlock>
            <p>By default, <span class="Code">netskope-parser()</span> uses the <span class="Code">.netskope.</span> prefix. To modify it, use the following format:</p><pre>parser {
    netskope-parser(prefix("myprefix."));
};</pre>
        </div>
    </body>
</html>