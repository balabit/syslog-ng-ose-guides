<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.OSE">
    <head>
        <link href="../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="" />
    </head>
    <body name="cisco-parser">
        <h1 name="cisco-parser">Cisco parser</h1>
        <MadCap:keyword term="segmenting messages">
        </MadCap:keyword>
        <MadCap:keyword term="Cisco parser">
        </MadCap:keyword>
        <MadCap:keyword term="cisco">
        </MadCap:keyword>
        <MadCap:keyword term="parsers:['cisco']">
        </MadCap:keyword>
        <p>The Cisco parser can parse the log messages of various Cisco devices. The messages of these devices often do not completely comply with the syslog RFCs, making them difficult to parse. The <span class="Code">cisco-parser()</span> of <MadCap:variable name="General.abbrev"></MadCap:variable> solves this problem, and can separate these log messages to name-value pairs, extracting also the Cisco-specific values, for example, the mnemonic. For details on using value-pairs in <MadCap:variable name="General.abbrev"></MadCap:variable> see <MadCap:xref href="concepts-value-pairs.htm"><span style="color: #04aada;" class="mcFormatColor">Structuring macros, metadata, and other value-pairs</span></MadCap:xref>. The parser can parse variations of the following message format:</p><pre>&lt;pri&gt;(sequence: )?(origin-id: )?(timestamp? timezone?: )?%msg</pre>
        <p>For example:</p><pre>&lt;189&gt;29: foo: *Apr 29 13:58:40.411: %SYS-5-CONFIG_I: Configured from console by console
&lt;190&gt;30: foo: *Apr 29 13:58:46.411: %SYS-6-LOGGINGHOST_STARTSTOP: Logging to host 192.168.1.239 stopped - CLI initiated
&lt;190&gt;31: foo: *Apr 29 13:58:46.411: %SYS-6-LOGGINGHOST_STARTSTOP: Logging to host 192.168.1.239 started - CLI initiated
&lt;189&gt;32: 0.0.0.0: *Apr 29 13:59:12.491: %SYS-5-CONFIG_I: Configured from console by console
&lt;189&gt;32: foo: *Apr 29 13:58:46.411: %SYSMGR-STANDBY-3-SHUTDOWN_START: The System Manager has started the shutdown procedure.</pre>
        <p>Note that not every Cisco log message conforms to this format. If you find a message that the <span class="Code">cisco-parser()</span> cannot properly parse, <a href="[%=General.contact-support%]">ááááááá</a> so we can improve the parser.</p>
        <p>The <MadCap:variable name="General.abbrev"></MadCap:variable> application normalizes the parsed log messages into the following format:</p><pre>${MESSAGE}=%FAC-SEV-MNEMONIC: message
${HOST}=origin-id</pre>
        <p>By default, the Cisco-specific fields are extracted into the following name-value pairs:<span class="Code">${.cisco.facility}</span>, <span class="Code">${.cisco.severity}</span>, <span class="Code">${.cisco.mnemonic}</span>. You can change the prefix using the <b class="Code">prefix</b> option.</p>
        <div>
            <h6>Declaration:</h6><pre>@version: <MadCap:variable name="Version.techversion"></MadCap:variable>
@include "scl.conf"
log {
    source { udp(flags(no-parse)); };
    parser { cisco-parser(); };
    destination { ... };
};</pre>
        </div>
        <p>Note that you have to disable message parsing in the source using the <b class="Code">flags(no-parse)</b> option for the parser to work.</p>
        <p>The <span class="Code">cisco-parser()</span> is actually a reusable configuration snippet configured to parse Cisco messages. For details on using or writing such configuration snippets, see <MadCap:xref href="config-blocks.htm"><span style="color: #04aada;" class="mcFormatColor">Reusing configuration blocks</span></MadCap:xref>. You can find the source of this configuration snippet on <a href="https://github.com/syslog-ng/syslog-ng/blob/master/scl/cisco/plugin.conf">GitHub</a>.</p>
        <div>
            <MadCap:snippetBlock src="../shared/chunk/option-parser-prefix.flsnp">
            </MadCap:snippetBlock>
            <p>By default, <span class="Code">cisco-parser()</span> uses the <span class="Code">.cisco.</span> prefix. To modify it, use the following format:</p><pre>parser {
    cisco-parser(prefix("myprefix."));
};</pre>
        </div>
    </body>
</html>