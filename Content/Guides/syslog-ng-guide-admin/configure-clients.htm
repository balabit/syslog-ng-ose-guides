<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="configure-clients">
        <h1 name="configure-clients">Configuring syslog-ng on client hosts</h1>
        <MadCap:keyword term="syslog-ng clients:['configuring']">
        </MadCap:keyword>
		<div>
        <h6>Purpose:</h6>
        <p>To configure syslog-ng on a client host, complete the following steps.</p>
		</div>
        <div>
            <h6>Steps:</h6>
            <ol>
                <li>
                    <p>Install the syslog-ng application on the host. For details installing syslog-ng on specific operating systems, see <MadCap:xref href="chapter-install.htm"><span style="color: #04aada;" class="mcFormatColor">Installing syslog-ng</span></MadCap:xref>.</p>
                </li>
                <li>
                    <MadCap:keyword term="configuration file:['default configuration']">
                    </MadCap:keyword>
                    <p>Configure the local sources to collect the log messages of the host. Starting with version 3.2, <MadCap:variable name="General.abbrev"></MadCap:variable> automatically collects the log messages that use the native system logging method of the platform, for example, messages from <span class="Code">/dev/log</span> on Linux, or <span class="Code">/dev/klog</span> on FreeBSD. For a complete list of messages that are collected automatically, see <MadCap:xref href="source-system.htm"><span style="color: #04aada;" class="mcFormatColor">system: Collecting the system-specific log messages of a platform</span></MadCap:xref>.</p>
                    <MadCap:snippetBlock src="../shared/chunk/para-config-file-location.flsnp">
                    </MadCap:snippetBlock>
                    <p>Add sources to collect the messages from your log files. File sources look like this:</p><pre>source s_myfilesource {
    file("/var/log/myapplication.log" follow-freq(1));
};</pre>
                    <p>Name every source uniquely. For details on configuring file sources, see <MadCap:xref href="configuring-sources-file.htm"><span style="color: #04aada;" class="mcFormatColor">file: Collecting messages from text files</span></MadCap:xref>.</p>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">TIP:</span> Many applications send log messages to logfiles by default (for example, the Roundcube webmail client, or the ProFTPD FTP server), but can be configured to send them to syslog instead. If possible, it is recommended to reconfigure the application that way.</p>
                    </div>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 
						The default configuration file of <MadCap:variable name="General.abbrev"></MadCap:variable> collects platform-specific log messages and the internal log messages of <MadCap:variable name="General.abbrev"></MadCap:variable>.</p><pre>source s_local {
    system();
    internal();
};</pre>
                    </div>
                </li>
                <li>
                    <p>Create a network destination that points directly to the syslog-ng server, or to a local relay. The network destination greatly depends on the protocol that your log server or relay accepts messages. Many systems still use the legacy BSD-syslog protocol (RFC3162) over the unreliable UDP transport:</p><pre>destination d_network { network("10.1.2.3" transport("udp")); };</pre>
                    <p>However, if possible, use the much more reliable IETF-syslog protocol over TCP transport:</p><pre>destination d_network {
    syslog("10.1.2.3" transport("tcp"));
};</pre>
                </li>
                <li>
                    <p>Create a log statement connecting the local sources to the syslog-ng server or relay. For example:</p><pre>log {
    source(s_local); destination(d_network);
};</pre>
                </li>
                <li>
                    <p>If the logs will also be stored locally on the host, create local file destinations.</p>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 
						The default configuration of <MadCap:variable name="General.abbrev"></MadCap:variable> places the collected messages into the <span class="Code">/var/log/messages</span> file:</p><pre>destination d_local {
    file("/var/log/messages");
};</pre>
                    </div>
                </li>
                <li>
                    <p>Create a log statement connecting the local sources to the file destination.</p>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 
						The default configuration of <MadCap:variable name="General.abbrev"></MadCap:variable> has only one log statement:</p><pre>log {
    source(s_local); destination(d_local);
};</pre>
                    </div>
                </li>
                <li>
                    <p>Set filters, macros and other features and options (for example, TLS encryption) as necessary.</p>
                    <div class="Example">
                        <h6 name="example-defaultconfig"><a name="example-defaultconfig"></a>Example: The default configuration file of <MadCap:variable name="General.abbrev"></MadCap:variable></h6>
                        <MadCap:keyword term="configuration file:['default configuration']">
                        </MadCap:keyword>
                        <p>The following is the default configuration file of <MadCap:variable name="General.abbrev"></MadCap:variable><MadCap:variable name="Version.techversion"></MadCap:variable>. It collects local log messages and the log messages of <MadCap:variable name="General.abbrev"></MadCap:variable> and saves them in the <span class="Code">/var/log/messages</span> file.</p><pre>@version: <MadCap:variable name="Version.techversion"></MadCap:variable>
@include "scl.conf"
source s_local {
    system(); internal();
};
destination d_local {
    file("/var/log/messages");
};
log {
    source(s_local); destination(d_local);
};</pre>
                    </div>
                    <div class="Example">
                        <h6 name="example-clientconfig"><a name="example-clientconfig"></a>Example: A simple configuration for clients</h6>
                        <p>The following is a simple configuration file that collects local log messages and forwards them to a logserver using the IETF-syslog protocol.</p><pre>@version: <MadCap:variable name="Version.techversion"></MadCap:variable>
@include "scl.conf"
source s_local {
    system(); internal();
};
destination d_syslog_tcp {
    syslog("192.168.1.1" transport("tcp") port(2010));
};
log {
    source(s_local);destination(d_syslog_tcp);
};</pre>
                    </div>
                </li>
            </ol>
        </div>
    </body>
</html>