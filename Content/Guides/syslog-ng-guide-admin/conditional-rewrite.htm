<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="conditional-rewrite">
        <h1 name="conditional-rewrite">Conditional rewrites</h1>
        <MadCap:keyword term="condition()">
        </MadCap:keyword>
        <MadCap:keyword term="conditional rewrites">
        </MadCap:keyword>
        <MadCap:keyword term="rewrite if">
        </MadCap:keyword>
        <MadCap:keyword term="rewriting messages:['conditional rewrites']">
        </MadCap:keyword>
        <MadCap:keyword term="filtering rewrites">
        </MadCap:keyword>
        <p>Starting with <MadCap:conditionaltext MadCap:conditions="General.PE">4 F1</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="General.OSE">3.2</MadCap:conditionaltext>, it is possible to apply a rewrite rule to a message only if certain conditions are met. The <span class="Code">condition()</span> option effectively embeds a filter expression into the rewrite rule: the message is modified only if the message passes the filter. If the condition is not met, the message is passed to the next element of the log path (that is, the element following the rewrite rule in the log statement, for example, the destination). Any filter expression normally used in filters can be used as a rewrite condition. Existing filter statements can be referenced using the <span class="Code">filter()</span> function within the condition. For details on filters, see <MadCap:xref href="filters.htm"><span style="color: #04aada;" class="mcFormatColor">Filters</span></MadCap:xref>.</p>
        <div class="Note">
            <p class="Hyphenation"><span class="AllNoteStyles">TIP:</span> Using conditions in rewrite rules can simplify your <MadCap:variable name="General.abbrev"></MadCap:variable> configuration file, as you do not need to create separate log paths to modify certain messages.</p>
        </div>
		<div>
        <h6 name="procedure-conditional-rewrite">Using conditional rewrite</h6>
        <p>
            <MadCap:keyword term="condition()" />
            <MadCap:keyword term="conditional rewrites" />
            <MadCap:keyword term="rewrite if" />
            <MadCap:keyword term="rewriting messages:['conditional rewrites']" />
            <MadCap:keyword term="filtering rewrites" />
        </p>
        <p>The following procedure summarizes how conditional rewrite rules (rewrite rules that have the <span class="Code">condition()</span> parameter set) work. The following configuration snippet is used to illustrate the procedure:</p><pre>rewrite r_rewrite_set{
    set(
        "myhost",
        value("HOST")
        condition(program("myapplication"))
    );
};
log {
    source(s1);
    rewrite(r_rewrite_set);
    destination(d1);
};</pre>
            <p class="Procedure">To configure condtional rewrite</p>
            <ol>
                <li>
                    <p>The log path receives a message from the source (<span class="Code">s1</span>).</p>
                </li>
                <li>
                    <p>The rewrite rule (<span class="Code">r_rewrite_set</span>) evaluates the condition. If the message matches the condition (the PROGRAM field of the message is "myapplication"), <MadCap:variable name="General.abbrev" /> rewrites the log message (sets the value of the HOST field to "myhost"), otherwise it is not modified.</p>
                </li>
                <li>
                    <p>The next element of the log path processes the message (<span class="Code">d1</span>).</p>
                </li>
            </ol>
        <div class="Example">
            <h6 name="example-conditional-rewrite"><a name="example-conditional-rewrite"></a>Example: Using conditional rewriting</h6>
            <p>The following example sets the HOST field of the message to <span class="Code">myhost</span> only if the message was sent by the <span class="Code">myapplication</span> program.</p><pre>rewrite r_rewrite_set{set("myhost", value("HOST") condition(program("myapplication")));};</pre>
            <p>The following example is identical to the previous one, except that the condition references an existing filter template.</p><pre>filter f_rewritefilter {program("myapplication");};
rewrite r_rewrite_set{set("myhost", value("HOST") condition(filter(f_rewritefilter)));};</pre>
        </div>
	 </div>
    </body>
</html>