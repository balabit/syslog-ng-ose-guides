<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="configuring-destinations-kafka-c-prer-decl">
        <h1 name="configuring-destinations-kafka-c-prer-decl">Before you begin</h1>
        <MadCap:keyword term="destination drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;java()&lt;/span&gt;, ' driver']">
        </MadCap:keyword>
        <MadCap:keyword term="destination drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;kafka&lt;/span&gt;]">
        </MadCap:keyword>
        <div>
            <p>This section describes the prerequisites and restrictions for using the <span class="Code">kafka</span> destination in the new C implementation, and important information about the declaration of the destination.</p>
			<div>
            <h6><a name="prereq"></a>Prerequisites and restrictions</h6>
            <ul>
                <MadCap:snippetBlock src="../shared/chunk/listitem-java-supported-platforms.flsnp">
                </MadCap:snippetBlock>
                <li>
                    <p>Since the new C implementation uses the <a href="https://docs.confluent.io/2.0.0/clients/librdkafka/index.html">librdkafka client library</a>, the <span class="Code">kafka</span> destination has less memory usage than the previous Java implementation (which uses the official Java Kafka producer).</p>
                </li>
                <MadCap:snippetBlock src="../shared/chunk/listitem-java-internal-messages.flsnp">
                </MadCap:snippetBlock>
                <li>If you used the Java implementation before, see <MadCap:xref href="destination-kafka-c-from-java.htm" class="HeadingOnPage"><span style="color: #04aada;" class="mcFormatColor">Shifting from Java implementation to C implementation</span></MadCap:xref>.</li>
                <li>
                    <p>The <MadCap:variable name="General.abbrev" /> <span class="Code">kafka</span> destination supports all properties of the official Kafka producer. For details, see <a href="https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md">the librdkafka documentation</a>.</p>
                </li>
                <li>
                    <p>For the list of options, see <MadCap:xref href="reference-destination-kafka-c.htm"><span style="color: #04aada;" class="mcFormatColor">Options of the kafka destination's C implementation</span></MadCap:xref>.</p>
                </li>
            </ul>
        </div>
		</div>
        <div>
            <h6>Declaration:</h6><pre>
@define kafka-implementation kafka-c

kafka(
    bootstrap-servers("1.2.3.4:9092,192.168.0.2:9092")
    topic("{MYTOPIC}")

);</pre>
        </div>
        <div class="Example">
            <h6 name="example-destination-kafka"><a name="example-destination-kafka"></a>Example: Sending log data to Apache Kafka</h6>
            <p>The following example defines a <span class="Code">kafka</span> destination in the new C implementation, using only the required parameters.</p><pre>

@define kafka-implementation kafka-c 
@include "scl.conf"

destination d_kafka {
  kafka(
    bootstrap-servers("1.2.3.4:9092,192.168.0.2:9092")
    topic("{MYTOPIC}")
  );
};</pre>
        </div>
    </body>
</html>