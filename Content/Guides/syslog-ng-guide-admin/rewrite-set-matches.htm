<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="rewrite-set-matches">
        <h1 name="rewrite-set-matches">Setting match variables with the set-matches() rewrite rule</h1>
        <MadCap:keyword term="rewrite()">
        </MadCap:keyword>
        <MadCap:keyword term="set-matches()">
        </MadCap:keyword>
        <p>Match macros (<b class="Code">$1, $2, ... $255</b>) are temporary variables. You can use them for general purposes when operating with list-like items. For example, the <a href="regular-expressions.htm"><span style="color: #04aada;" class="mcFormatColor">match() filter</span></a> stores capture group results in match variables when the <span class="Code">store-matches</span> flag is set, or the <MadCap:xref href="json-parser.htm"><span style="color: #04aada;" class="mcFormatColor">JSON parser</span></MadCap:xref> produces match variables if the parsed JSON data is an array.</p>
        <p>It is possible to set match variables in a single operation with the <span class="Code">set-matches()</span> rewrite function. <span class="Code">set-matches()</span> uses <MadCap:variable name="General.abbrev"></MadCap:variable> list expressions to set <b class="Code">$1, $2, ... $255</b>, so it can be considered as a conversion function between <MadCap:variable name="General.abbrev"/> lists and match variables.</p>
        <div class="Note">
            <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> To convert match variables into a <MadCap:variable name="General.abbrev"/> list, use the <span class="Code">$*</span> macro, which can be further manipulated using <MadCap:xref href="reference-template-functions.htm#template-function-list"><span style="color: #04aada;" class="mcFormatColor">list template functions</span></MadCap:xref>, or turned into a list in type-aware destinations.</p>
        </div>
        <div class="Note">
            <p class="Hyphenation">
            <span class="AllNoteStyles">TIP:</span> To reset match variables to be empty, use the <span class="Code">unset-matches()</span> rewrite rule.</p>
        </div>
        <div>
            <h6>Declaration</h6><pre>rewrite &lt;name_of_the_rule&gt; {
    set-matches("&lt;list-expression or list-based template function&gt;");
};</pre>
        </div>
        <div class="Example">
            <h6>Example usage for the set-matches() rewrite function</h6>
            <p><b>Example using string:</b>
            </p><pre>rewrite {
    set-matches("foo,bar,baz");
};</pre>
            <p><b>Example using a list template function:</b>
            </p><pre>rewrite {
    set-matches("$(explode ':' 'foo:bar:baz')");
};</pre>
        </div>
    </body>
</html>
