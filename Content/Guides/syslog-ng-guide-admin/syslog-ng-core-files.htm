<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="syslog-ng-core-files">
        <h1 name="syslog-ng-core-files">Creating syslog-ng core files</h1>
        <MadCap:keyword term="troubleshooting:['syslog-ng']">
        </MadCap:keyword>
        <MadCap:keyword term="troubleshooting:['core files']">
        </MadCap:keyword>
        <MadCap:keyword term="core files">
        </MadCap:keyword>
		<div>
        <h6>Purpose:</h6>
        <p>When syslog-ng crashes for some reason, it can create a core file that contains important troubleshooting information. To enable core files, complete the following procedure:</p>
		</div>
        <div>
		<h6>Steps:</h6>
        <ol>
            <li>
                <p>Core files are produced only if the <span class="Code">maximum core file size</span> ulimit is set to a high value in the init script of syslog-ng.Add the following line to the init script of syslog-ng:</p><pre>ulimit -c unlimited</pre>
            </li>
            <li>
                <p>Verify that syslog-ng has permissions to write the directory it is started from, for example, <span class="Code">/opt/syslog-ng/sbin/</span>.</p>
            </li>
            <li>
                <p>If syslog-ng crashes, it will create a core file in the directory syslog-ng was started from.</p>
            </li>
            <li>
                <p>To test that syslog-ng can create a core file, you can create a crash manually. For this, determine the PID of syslog-ng (for example, using the <b class="Code">ps -All|grep syslog-ng</b> command), then issue the following command: <b class="Code">kill -ABRT &lt;syslog-ng pid&gt;</b></p>
                <p>This should create a core file in the current working directory.</p>
            </li>
        </ol>
		</div>
    </body>
</html>