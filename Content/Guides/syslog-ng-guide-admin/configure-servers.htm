<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="configure-servers">
        <h1 name="configure-servers">Configuring syslog-ng on server hosts</h1>
        <MadCap:keyword term="syslog-ng servers:['configuring']">
        </MadCap:keyword>
		<div>
        <h6>Purpose:</h6>
        <p>To configure syslog-ng on a server host, complete the following steps.</p>
		</div>
        <div>
            <h6>Steps:</h6>
            <ol>
                <li>
                    <p>Install the syslog-ng application on the host. For details installing syslog-ng on specific operating systems, see <MadCap:xref href="chapter-install.htm"><span style="color: #04aada;" class="mcFormatColor">Installing syslog-ng</span></MadCap:xref>.</p>
                </li>
                <li>
                    <p>Starting with version 3.2, <MadCap:variable name="General.abbrev"></MadCap:variable> automatically collects the log messages that use the native system logging method of the platform, for example, messages from <span class="Code">/dev/log</span> on Linux, or <span class="Code">/dev/klog</span> on FreeBSD. For a complete list of messages that are collected automatically, see <MadCap:xref href="source-system.htm"><span style="color: #04aada;" class="mcFormatColor">system: Collecting the system-specific log messages of a platform</span></MadCap:xref>.</p>
                </li>
                <li>
                    <MadCap:snippetBlock src="../shared/chunk/para-config-file-location.flsnp">
                    </MadCap:snippetBlock>
                    <p>Configure the network sources that collect the log messages sent by the clients and relays. How the network sources should be configured depends also on the capabilities of your client hosts: many older networking devices support only the legacy BSD-syslog protocol (RFC3164) using UDP transport:</p><pre>source s_network {
    syslog(ip(10.1.2.3) transport("udp"));
};</pre>
                    <p>However, if possible, use the much more reliable TCP transport:</p><pre>source s_network {
    syslog(ip(10.1.2.3) transport("tcp"));
};</pre>
                    <p>For other options, see <MadCap:xref href="source-syslog.htm"><span style="color: #04aada;" class="mcFormatColor">syslog: Collecting messages using the IETF syslog protocol (syslog() driver)</span></MadCap:xref> and <MadCap:xref href="configuring-sources-tcpudp.htm"><span style="color: #04aada;" class="mcFormatColor">tcp, tcp6, udp, udp6: Collecting messages from remote hosts using the BSD syslog protocol</span></MadCap:xref>.</p>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 
						Starting with <MadCap:variable name="General.abbrev"></MadCap:variable> version 3.2, the <span class="Code">syslog()</span> source driver can handle both BSD-syslog (RFC 3164) and IETF-syslog (RFC 5424-26) messages.</p>
                    </div>
                </li>
                <li>
                    <p>Create local destinations that will store the log messages, for example, file- or program destinations. The default configuration of <MadCap:variable name="General.abbrev"></MadCap:variable> places the collected messages into the <span class="Code">/var/log/messages</span> file:</p><pre>destination d_local {
    file("/var/log/messages");
};</pre>
                    <p>If you want to create separate logfiles for every client host, use the <b class="Code">${HOST}</b> macro when specifying the filename, for example:</p><pre>destination d_local {
    file("/var/log/messages_${HOST}");
};</pre>
                    <p>For details on further macros and how to use them, see <MadCap:xref href="chapter-manipulating-messages.htm"><span style="color: #04aada;" class="mcFormatColor">template and rewrite: Format, modify, and manipulate log messages</span></MadCap:xref>.</p>
                </li>
                <li>
                    <p>Create a log statement connecting the sources to the local destinations.</p><pre>log {
    source(s_local); source(s_network); destination(d_local);
};</pre>
                </li>
                <li>
                    <p>Set filters, options (for example, TLS encryption) and other advanced features as necessary.</p>
                    <MadCap:snippetBlock src="../shared/wnt/note-relaying-hostname.htm">
                    </MadCap:snippetBlock>
                    <div class="Example">
                        <h6 name="example-serverconfig"><a name="example-serverconfig"></a>Example: A simple configuration for servers</h6>
                        <p>The following is a simple configuration file for <MadCap:variable name="General.product"></MadCap:variable> that collects incoming log messages and stores them in a text file.</p><pre>@version: <MadCap:variable name="Version.techversion"></MadCap:variable>
@include "scl.conf"
options {
    time-reap(30);
    mark-freq(10);
    keep-hostname(yes);
};
source s_local {
    system(); internal();
};
source s_network {
    syslog(transport(tcp));
};
destination d_logs {
    file(
        "/var/log/syslog-ng/logs.txt"
        owner("root")
        group("root")
        perm(0777)
        );
    };
log {
    source(s_local); source(s_network); destination(d_logs);
};</pre>
                    </div>
                </li>
            </ol>
        </div>
    </body>
</html>