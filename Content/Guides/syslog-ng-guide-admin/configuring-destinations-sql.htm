<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="configuring-destinations-sql">
        <h1 name="configuring-destinations-sql">sql: Storing messages in an SQL database</h1>
        <MadCap:keyword term="destination drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;sql()&lt;/span&gt;, ' driver']">
        </MadCap:keyword>
        <MadCap:keyword term="destination drivers:['database driver']">
        </MadCap:keyword>
        <MadCap:keyword term="sql destinations">
        </MadCap:keyword>
        <p>The <span class="Code">sql()</span> driver sends messages into an SQL database. Currently the Microsoft SQL (MSSQL), MySQL, Oracle, PostgreSQL, and SQLite databases are supported.</p>
		<div>
        <h6>Declaration:</h6><pre>sql(database_type host_parameters database_parameters [options]);</pre>
        <p>The <span class="Code">sql()</span> driver has the following required parameters: <a href="reference-destination-sql.htm"><span class="Code">type()</span></a>, <a href="reference-destination-sql.htm"><span class="Code">database()</span></a>, <a href="reference-destination-sql.htm"><span class="Code">table()</span></a>, <a href="reference-destination-sql.htm"><span class="Code">columns()</span></a>, and <a href="reference-destination-sql.htm"><span class="Code">values()</span></a>.</p>
        <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
            </col>
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
            </col>
            <tbody>
                <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
                        <p>
                            <img src="../../Resources/Images/Common/caution.png" />
                        </p>
                    </td>
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1"><span class="Yellow">Caution: </span>
                        <p>The syslog-ng application requires read and write access to the SQL table, otherwise it cannot verify that the destination table exists.</p>
                        <p>Currently the syslog-ng application has default schemas for the different databases and uses these defaults if the database schema (for example, columns and column types) is not defined in the configuration file. However, these schemas will be deprecated and specifying the exact database schema will be required in later versions of syslog-ng.</p>
                    </td>
                </tr>
            </tbody>
        </table>
		</div>
        <div class="Note">
            <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 
			In addition to the standard syslog-ng packages, the <span class="Code">sql()</span> destination requires database-specific packages to be installed. These packages are automatically installed by the binary syslog-ng installer.</p>
        </div>
        <p>The <span class="Code">table</span> and <span class="Code">value</span> parameters can include macros to create tables and columns dynamically (for details, see <MadCap:xref href="reference-macros.htm"><span style="color: #04aada;" class="mcFormatColor">Macros of [%=General.OSE%]</span></MadCap:xref>).</p>
        <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
            </col>
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
            </col>
            <tbody>
                <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
                        <p>
                            <img src="../../Resources/Images/Common/caution.png" />
                        </p>
                    </td>
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1"><span class="Yellow">Caution: </span>
                        <p>When using macros in table names, note that some databases limit the maximum allowed length of table names. Consult the documentation of the database for details.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>Inserting the records into the database is performed by a separate thread. The syslog-ng application automatically performs the escaping required to insert the messages into the database.</p>
        <div class="Example">
            <h6 name="example-destination-sql"><a name="example-destination-sql"></a>Example: Using the sql() driver</h6>
            <MadCap:keyword term="destinations:['sql() configuration']">
            </MadCap:keyword>
            <MadCap:keyword term="PostgreSQL:['sql() configuration']">
            </MadCap:keyword>
            <p>The following example sends the log messages into a PostgreSQL database running on the <span class="Code">logserver</span> host. The messages are inserted into the <span class="Code">logs</span> database, the name of the table includes the exact date and the name of the host sending the messages. The syslog-ng application automatically creates the required tables and columns, if the user account used to connect to the database has the required privileges.</p><pre>destination d_sql {
    sql(type(pgsql)
    host("logserver") username("syslog-ng") password("password")
    database("logs")
    table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
    columns("datetime", "host", "program", "pid", "message")
    values("{$R_DATE}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}")
    indexes("datetime", "host", "program", "pid", "message"));
};</pre>
            <p>The following example specifies the type of the database columns as well:</p><pre>destination d_sql {
    sql(type(pgsql)
    host("logserver") username("syslog-ng") password("password")
    database("logs")
    table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
    columns("datetime varchar(16)", "host varchar(32)", "program  varchar(20)", "pid varchar(8)", "message  varchar(200)")
    values("${R_DATE}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}")
    indexes("datetime", "host", "program", "pid", "message"));
};</pre>
        </div>
    </body>
</html>